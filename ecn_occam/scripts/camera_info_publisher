#!/usr/bin/env python


'''
This script simply publishes content of the given calibration file to the camera_info topic of the node namespace
'''

import rospy,time,threading
from sensor_msgs.msg import CameraInfo
import yaml


if __name__ == '__main__':
	'''
	Begin of main code
	'''
	# name of the node
	rospy.init_node('camera_info_publisher')
	
	# get file
	calibration_file = rospy.get_param('~file')
	
	with open(calibration_file) as f:
            calib = yaml.load(f.read())
            
        # advertise
        cam_pub = rospy.Publisher('camera_info', CameraInfo,queue_size=1)
        
        # build message
        msg = CameraInfo()
        msg.header.frame_id = 'occam'#calib['camera_name']
        
        msg.height = calib['image_height']
        msg.width = calib['image_width']
        msg.distortion_model = calib['distortion_model']
        msg.K = calib['camera_matrix']['data']
        msg.D = calib['distortion_coefficients']['data']
        msg.R = calib['rectification_matrix']['data']
        msg.P = calib['projection_matrix']['data']
                   
        print calibration_file
            
        
        
        while not rospy.is_shutdown():
            msg.header.stamp = rospy.Time.now()            
            cam_pub.publish(msg)           
            
            
            rospy.sleep(0.1)
	
